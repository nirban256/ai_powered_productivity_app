datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Priority {
  severe
  high
  low
}

model User {
  id             String        @id @default(cuid())
  name           String?
  email          String?       @unique
  hashedPassword String?       // For credentials login
  tasks          Tasks[]
  notes          Notes[]
  events         Events[]
  suggestion     Suggestion[]
}

model Tasks {
  id              String    @id @default(cuid())
  title           String
  status          Boolean?  @default(false)
  priority        Priority  @default(low)
  userId          String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, id])
}

model Notes {
  id              String    @id @default(cuid())
  title           String
  description     String
  userId          String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, id])
}

model Events {
  id              String    @id @default(cuid())
  title           String
  date            DateTime
  userId          String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @default(now())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, id])
}

model Suggestion {
  id          String    @id @default(cuid())
  suggestion  String
  prompt      String
  createdAt   DateTime  @default(now())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, id])
}
